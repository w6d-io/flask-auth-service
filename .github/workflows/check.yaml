name: Test build

on:
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: w6d-io/flask-auth-service

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 flask_auth_service --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 flask_auth_service --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Test with pytest
        run: |
          pytest tests/ --cov=flask_auth_service --cov-report=xml --cov-report=term-missing
        env:
          VALID_KEYS: "test-key-1,test-key-2"

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Login to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr

      - name: Build variables
        if: contains(github.event.pull_request.changed_files.*.filename, 'Dockerfile')
        id: build_env
        run: |
          echo ${{ steps.meta.outputs.tags }}
          echo "SOURCE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV
          echo "PROJECT_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" >> $GITHUB_ENV
          echo "VCS_REF=$GITHUB_SHA" >> $GITHUB_OUTPUT

      - name: Build Docker image
        if: contains(github.event.pull_request.changed_files.*.filename, 'Dockerfile')
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          build-args: |
            VERSION=${{ env.SOURCE_TAG }}
            VCS_REF=${{ env.VCS_REF }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            PROJECT_URL=${{ env.PROJECT_URL }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Test Docker image
        if: contains(github.event.pull_request.changed_files.*.filename, 'Dockerfile')
        run: |
          # Test the built image
          docker run --rm -d --name test-flask-auth \
            -e VALID_KEYS="test-key-1,test-key-2" \
            -p 8081:8081 \
            ${{ steps.meta.outputs.tags }}
          
          # Wait for service to start
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:8081/health
          
          # Test auth endpoint
          curl -f -H "Authorization: Bearer test-key-1" http://localhost:8081/validate
          
          # Stop test container
          docker stop test-flask-auth